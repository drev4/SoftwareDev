[["/Users/diego/SoftwareDev/DDD-Typescript/tests/Contexts/Blog/TodoEntry/application/TodoEntryCreator.test.ts",{"fileContent":"import { TodoEntryCreator } from '../../../../../src/Contexts/Blog/TodoEntry/application/TodoEntryCreator';\nimport { TodoEntry } from '../../../../../src/Contexts/Blog/TodoEntry/domain/TodoEntry';\nimport { BlogEntryRepositoryMock } from '../__mocks__/BlogEntryRepositoryMock';\n\nlet repository: BlogEntryRepositoryMock;\nlet creator: TodoEntryCreator;\n\nbeforeEach(() => {\n  repository = new BlogEntryRepositoryMock();\n  creator = new TodoEntryCreator(repository);\n});\n\ndescribe('CourseCreator', () => {\n  it('should create a valid course', async () => {\n\n    const id = 'some-id';\n    const title = 'some-name';\n    const body = 'some-body';\n\n    const blogEntry = new TodoEntry({id, title, body});\n\n    await creator.run(id, title, body);\n\n    repository.assertLastSavedBlogEntryIs(blogEntry);\n  });\n});\n","resolvedModuleNames":["/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/TodoEntry/application/TodoEntryCreator.ts","/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/TodoEntry/domain/TodoEntry.ts","/Users/diego/SoftwareDev/DDD-Typescript/tests/Contexts/Blog/TodoEntry/__mocks__/BlogEntryRepositoryMock.ts","/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/TodoEntry/domain/TodoEntryRepository.ts"]}],["/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/TodoEntry/application/TodoEntryCreator.ts",{"fileContent":"import { TodoEntry } from '../domain/TodoEntry';\nimport { TodoEntryRepository } from '../domain/TodoEntryRepository';\n\nexport class TodoEntryCreator {\n    private repository: TodoEntryRepository;\n\n    constructor(repository: TodoEntryRepository) {\n      this.repository = repository;\n    }\n\n    async run(id: string, title: string, body: string): Promise<void> {\n      const course = new TodoEntry({ id, title, body });\n\n      return this.repository.save(course);\n    }\n  }\n","resolvedModuleNames":["/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/TodoEntry/domain/TodoEntry.ts","/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/TodoEntry/domain/TodoEntryRepository.ts"]}],["/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/TodoEntry/domain/TodoEntry.ts",{"fileContent":"export class TodoEntry {\n    readonly id: string;\n    readonly title: string;\n    readonly body: string;\n\n    constructor({ id, title, body }: { id: string; title: string; body: string; }) {\n      this.id = id;\n      this.title = title;\n      this.body = body;\n    }\n  }\n","resolvedModuleNames":[]}],["/Users/diego/SoftwareDev/DDD-Typescript/tests/Contexts/Blog/TodoEntry/__mocks__/BlogEntryRepositoryMock.ts",{"fileContent":"import { TodoEntryRepository} from '../../../../../src/Contexts/Blog/TodoEntry/domain/TodoEntryRepository';\nimport { TodoEntry} from '../../../../../src/Contexts/Blog/TodoEntry/domain/TodoEntry';\n\nexport class BlogEntryRepositoryMock implements  TodoEntryRepository {\n  private mockSave = jest.fn();\n\n  async save(blogEntry: TodoEntry) {\n    this.mockSave(blogEntry);\n  }\n\n  assertLastSavedBlogEntryIs(expected: TodoEntry): void {\n    const mock = this.mockSave.mock;\n    const lastSavedCourse = mock.calls[mock.calls.length - 1][0] as TodoEntry;\n    expect(lastSavedCourse).toBeInstanceOf(TodoEntry);\n    expect(lastSavedCourse.id).toEqual(expected.id);\n  }\n\n}\n","resolvedModuleNames":["/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/TodoEntry/domain/TodoEntryRepository.ts","/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/TodoEntry/domain/TodoEntry.ts"]}]]
