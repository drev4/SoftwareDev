[["/Users/diego/SoftwareDev/DDD-Typescript/tests/Contexts/Blog/BlogEntry/application/BlogEntryCreator.test.ts",{"fileContent":"import { BlogEntryCreator } from '../../../../../src/Contexts/Blog/BlogEntry/application/BlogEntryCreator';\nimport { BlogEntry } from '../../../../../src/Contexts/Blog/BlogEntry/domain/BlogEntry';\nimport { BlogEntryRepositoryMock } from '../__mocks__/BlogEntryRepositoryMock';\n\nlet repository: BlogEntryRepositoryMock;\nlet creator: BlogEntryCreator;\n\nbeforeEach(() => {\n  repository = new BlogEntryRepositoryMock();\n  creator = new BlogEntryCreator(repository);\n});\n\ndescribe('CourseCreator', () => {\n  it('should create a valid course', async () => {\n\n    const id = 'some-id';\n    const title = 'some-name';\n    const body = 'some-body';\n\n    const blogEntry = new BlogEntry({id, title, body});\n\n    await creator.run(id, title, body);\n\n    repository.assertLastSavedBlogEntryIs(blogEntry);\n  });\n});\n","resolvedModuleNames":["/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/BlogEntry/application/BlogEntryCreator.ts","/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/BlogEntry/domain/BlogEntry.ts","/Users/diego/SoftwareDev/DDD-Typescript/tests/Contexts/Blog/BlogEntry/__mocks__/BlogEntryRepositoryMock.ts","/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/BlogEntry/domain/BlogEntryRepository.ts"]}],["/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/BlogEntry/application/BlogEntryCreator.ts",{"fileContent":"import { BlogEntry } from '../domain/BlogEntry';\nimport { BlogEntryRepository } from '../domain/BlogEntryRepository';\n\nexport class BlogEntryCreator {\n    private repository: BlogEntryRepository;\n\n    constructor(repository: BlogEntryRepository) {\n      this.repository = repository;\n    }\n\n    async run(id: string, title: string, body: string): Promise<void> {\n      const course = new BlogEntry({ id, title, body });\n\n      return this.repository.save(course);\n    }\n  }\n","resolvedModuleNames":["/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/BlogEntry/domain/BlogEntry.ts","/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/BlogEntry/domain/BlogEntryRepository.ts"]}],["/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/BlogEntry/domain/BlogEntry.ts",{"fileContent":"export class BlogEntry {\n    readonly id: string;\n    readonly title: string;\n    readonly body: string;\n\n    constructor({ id, title, body }: { id: string; title: string; body: string; }) {\n      this.id = id;\n      this.title = title;\n      this.body = body;\n    }\n  }\n","resolvedModuleNames":[]}],["/Users/diego/SoftwareDev/DDD-Typescript/tests/Contexts/Blog/BlogEntry/__mocks__/BlogEntryRepositoryMock.ts",{"fileContent":"import { BlogEntryRepository} from '../../../../../src/Contexts/Blog/BlogEntry/domain/BlogEntryRepository';\nimport { BlogEntry} from '../../../../../src/Contexts/Blog/BlogEntry/domain/BlogEntry';\n\nexport class BlogEntryRepositoryMock implements  BlogEntryRepository {\n  private mockSave = jest.fn();\n\n  async save(blogEntry: BlogEntry) {\n    this.mockSave(blogEntry);\n  }\n\n  assertLastSavedBlogEntryIs(expected: BlogEntry): void {\n    const mock = this.mockSave.mock;\n    const lastSavedCourse = mock.calls[mock.calls.length - 1][0] as BlogEntry;\n    expect(lastSavedCourse).toBeInstanceOf(BlogEntry);\n    expect(lastSavedCourse.id).toEqual(expected.id);\n  }\n\n}\n","resolvedModuleNames":["/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/BlogEntry/domain/BlogEntryRepository.ts","/Users/diego/SoftwareDev/DDD-Typescript/src/Contexts/Blog/BlogEntry/domain/BlogEntry.ts"]}]]