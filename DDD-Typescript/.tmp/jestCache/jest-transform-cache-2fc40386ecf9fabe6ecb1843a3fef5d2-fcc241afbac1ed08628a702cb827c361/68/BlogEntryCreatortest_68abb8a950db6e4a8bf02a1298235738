1ba4b27fab78a4a0e55844df49c1abeb
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const BlogEntryCreator_1 = require("../../../../../src/Contexts/Blog/TodoEntry/application/TodoEntryCreator");
const BlogEntry_1 = require("../../../../../src/Contexts/Blog/TodoEntry/domain/TodoEntry");
const BlogEntryRepositoryMock_1 = require("../__mocks__/BlogEntryRepositoryMock");
let repository;
let creator;
beforeEach(() => {
    repository = new BlogEntryRepositoryMock_1.BlogEntryRepositoryMock();
    creator = new BlogEntryCreator_1.TodoEntryCreator(repository);
});
describe('CourseCreator', () => {
    it('should create a valid course', () => __awaiter(void 0, void 0, void 0, function* () {
        const id = 'some-id';
        const title = 'some-name';
        const body = 'some-body';
        const blogEntry = new BlogEntry_1.TodoEntry({ id, title, body });
        yield creator.run(id, title, body);
        repository.assertLastSavedBlogEntryIs(blogEntry);
    }));
});
